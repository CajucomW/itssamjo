{"version":3,"sources":["components/BlogList/BlogList.js","constants/index.js","components/Home/Home.js","components/BlogsWrite/BlogsWrite.js","components/NavMenu/NavMenu.js","components/Header/Header.js","components/NotFound/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["BlogList","this","props","blogs","map","blog","title","text","created","Component","API_URL","Home","state","fetchBlogs","axios","get","then","res","setState","data","resetState","BlogsWrite","onChangeTitle","ev","target","value","onChangeText","response","createBlog","preventDefault","post","history","push","onSubmit","placeholder","onChange","React","withRouter","NavMenu","to","Header","class","NotFound","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6PAsBeA,E,uKAjBP,OADcC,KAAKC,MAAMC,MAEfC,KAAI,SAAAC,GAAI,OACd,6BACI,4BAAI,gCAASA,EAAKC,QAClB,6BACA,6BACCD,EAAKE,KACN,6BACA,6BACA,+BAAQF,EAAKG,SACb,6BACA,qC,GAdOC,a,iBCFVC,EAAU,qCC6CRC,E,4MAvCXC,MAAQ,CACJT,MAAO,I,EAOXU,WAAa,WACTC,IAAMC,IAAIL,GACTM,MAAK,SAAAC,GAAG,OAAI,EAAKC,SAAS,CAAEf,MAAOc,EAAIE,W,kEALxClB,KAAKmB,e,mCAqBLnB,KAAKY,e,+BAIL,OACI,kBAAC,EAAD,CACIV,MAAOF,KAAKW,MAAMT,MAClBiB,WAAYnB,KAAKmB,iB,GAlCdX,aCAbY,E,4MACFT,MAAQ,CACJN,MAAO,GACPC,KAAM,I,EAGVe,cAAgB,SAACC,GACb,EAAKL,SAAS,CACVZ,MAAOiB,EAAGC,OAAOC,S,EAGzBC,aAAe,SAACH,GACZ,EAAKL,SAAS,CACVX,KAAMgB,EAAGC,OAAOC,S,EAQxBZ,WAAa,WACTC,IAAMC,IAAIL,GACTM,MAAK,SAAAW,GAAQ,OAAI,EAAKT,SAAS,CAAEf,MAAOwB,EAASR,W,EAGtDC,WAAa,WACT,EAAKP,c,EAGTe,WAAa,SAACL,GACVA,EAAGM,iBACHf,IAAMgB,KAAKpB,EAAS,EAAKE,OACxBI,MAAK,WACF,EAAKE,WACL,EAAKhB,MAAM6B,QAAQC,KAAK,Q,uDAK5B,OACI,0BAAMC,SAAUhC,KAAK2B,YACjB,qCACA,2BACIM,YAAY,mBACZC,SAAUlC,KAAKqB,gBACnB,6BACA,oCACA,8BACIY,YAAY,mBACZC,SAAUlC,KAAKyB,eACnB,6BACA,6C,GApDSU,IAAM3B,WA4DhB4B,cAAWhB,GCjDXiB,E,uKATP,OACI,6BACI,kBAAC,IAAD,CAAMC,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,iBAAT,c,GALM9B,aCiBP+B,E,uKAhBP,OACI,6BACI,yBAAKC,MAAM,0DACP,wBAAIA,MAAM,gBAAV,YAEA,kBAAC,EAAD,OAGJ,kDACA,sEACA,kC,GAZKhC,aCUNiC,E,uKATP,OACI,6BACI,kDACA,kBAAC,IAAD,CAAMH,GAAG,KAAT,a,GALO9B,aC2BRkC,E,uKAfb,OACC,6BACC,kBAAC,EAAD,MACA,6BACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWnC,IACjC,kBAAC,IAAD,CAAOiC,OAAK,EAACC,KAAK,gBAAgBC,UAAWzB,IAC7C,kBAAC,IAAD,CAAOyB,UAAWJ,W,GATNjC,aCDEsC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCVNC,IAASC,OAED,kBAAC,IAAD,KACI,kBAAC,EAAD,OAELC,SAASC,eAAe,SDoHzB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1C,MAAK,SAAA2C,GACjCA,EAAaC,kB","file":"static/js/main.5d85b220.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass BlogList extends Component {\n    render () {\n        const blogs = this.props.blogs;\n        return (\n            blogs.map(blog => (\n            <div>\n                <h3><strong>{blog.title}</strong></h3>\n                <br />\n                <hr />\n                {blog.text}\n                <br />\n                <br />\n                <small>{blog.created}</small>\n                <br />\n                <hr />\n            </div>\n            ))\n        );\n    }\n}\nexport default BlogList;","export const API_URL = \"http://localhost:8000/api/bloglist\";","import React, { Component } from \"react\";\nimport BlogList from \"../BlogList/BlogList.js\";\nimport axios from \"axios\";\nimport { API_URL } from \"../../constants\";\n\nclass Home extends Component {\n    state = {\n        blogs: []\n    };\n\n    componentDidMount() {\n        this.resetState();\n    }\n\n    fetchBlogs = () => {\n        axios.get(API_URL)\n        .then(res => this.setState({ blogs: res.data }));\n    };\n\n    // getBlogs() {\n    //     console.log('Fetching data from API');\n    //     fetch('http://localhost:8000/api/bloglist')\n    //     .then(response => response.json())\n    //     .then(data => {\n    //         console.log('Got data back', data);\n    //         this.setState({\n    //         blogs: data,\n    //         });\n    //     });\n    // }\n\n    resetState() {\n        this.fetchBlogs();\n    };\n\n    render () {\n        return (\n            <BlogList\n                blogs={this.state.blogs}\n                resetState={this.resetState}\n                />\n        );\n    }\n}\n\nexport default Home;","import React, { Component, PropsTypes } from 'react';\nimport { withRouter } from 'react-router';\nimport axios from \"axios\";\nimport { API_URL } from \"../../constants\";\n\nclass BlogsWrite extends React.Component {\n    state = {\n        title: '',\n        text: '',\n    };\n\n    onChangeTitle = (ev) => {\n        this.setState({\n            title: ev.target.value,\n        });\n    }\n    onChangeText = (ev) => {\n        this.setState({\n            text: ev.target.value,\n        });\n    }\n\n    // componentDidMount() {\n    //     this.resetState();\n    // }\n\n    fetchBlogs = () => {\n        axios.get(API_URL)\n        .then(response => this.setState({ blogs: response.data }));\n    }\n\n    resetState = () => {\n        this.fetchBlogs();\n    }\n\n    createBlog = (ev) => {\n        ev.preventDefault();\n        axios.post(API_URL, this.state)\n        .then(() => {\n            this.setState();\n            this.props.history.push('');\n        });\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.createBlog}>\n                <h2>Title</h2>\n                <input \n                    placeholder=\"Title goes here.\"\n                    onChange={this.onChangeTitle} />\n                <br />\n                <h2>Blog</h2>\n                <textarea \n                    placeholder=\"Write blog here.\"\n                    onChange={this.onChangeText} />\n                <br />\n                <button>\n                    Post\n                </button>\n            </form>\n        );\n    }\n}\n\nexport default withRouter(BlogsWrite);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Home from '../Home/Home.js';\nimport BlogsWrite from '../BlogsWrite/BlogsWrite.js';\n\nclass NavMenu extends Component {\n    render() {\n        return (\n            <div>\n                <Link to=\"/\">Home</Link>\n                <Link to=\"/write_blogs/\">Blogs</Link>\n            </div>\n        )\n    }\n}\n\nexport default NavMenu;","import React, { Component } from \"react\";\nimport { Link, Switch, Route } from 'react-router-dom';\nimport NavMenu from '../NavMenu/NavMenu.js';\n\nclass Header extends Component {\n    render() {\n        return (\n            <div>\n                <nav class=\"navbar navbar-expand-md navbar-dark bg-dark sticky-top\">\n                    <h1 class=\"navbar-brand\">itssamjo</h1>\n\n                    <NavMenu />\n                </nav>\n\n                <h1>Spammy's Blog Page</h1>\n                <p>She doesn't know I'm working on this...</p>\n                <br />\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass NotFound extends Component {\n    render () {\n        return (\n            <div>\n                <h1>Page Not Found 404</h1>\n                <Link to=\"/\">Home</Link>\n            </div>\n        );\n    }\n}\n\nexport default NotFound;","import ReactDOM from 'react-dom';\nimport React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport Header from './components/Header/Header.js';\nimport Home from './components/Home/Home.js';\nimport BlogsWrite from './components/BlogsWrite/BlogsWrite.js';\nimport NotFound from './components/NotFound/NotFound.js';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Header />\n\t\t\t\t<div>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path='/' component={Home} />\n\t\t\t\t\t\t<Route exact path='/write_blogs/' component={BlogsWrite} />\n\t\t\t\t\t\t<Route component={NotFound} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    (\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    ), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}